function [Aa, Ab, As] = matrices_A_13indexation_opt(param,hx)
% Mathematica, materials13indexation_opt.nb
% 17 jan 2020
% A-matrices for baseline model w/ indexation in NKPC, optimal forecasters info ass.

bet = param.bet;  
sig = param.sig;
alph = param.alph;
kapp = param.kapp;
psi_x = param.psi_x;
psi_pi = param.psi_pi;
w = param.w;
gbar = param.gbar;
thetbar = param.thetbar;
rho_r = param.rho_r;
rho_i = param.rho_i;
rho_u = param.rho_u;
sig_r = param.sig_r;
sig_i = param.sig_i;
sig_u = param.sig_u;
rho = param.rho;
gam = param.gam;
nx= size(hx,1); 

% transform these two to be compatible with Mathematica
psipi = psi_pi;
psix = psi_x;

% The only thing you need to specify by hand is 
ia = (eye(nx)-alph*bet*hx)^(-1);
ib = (eye(nx)-bet*hx)^(-1);

% Given the d-matrices, the solution is calculated in Mathematica and
% copied from there:
Aa = [0,alph.^2.*bet.*kapp.*(1+(-1).*psix.*sig).*(alph.*kapp.*psipi.* ...
  sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)) ...
  .^(-1),0;0,(-1).*alph.^2.*bet.*kapp.*psipi.*sig.*(alph.*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.* ...
  sig)).^(-1),0;0,alph.^2.*bet.*kapp.*psipi.*(1+(-2).*psix.*sig).*( ...
  alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).* ...
  ((-1)+psix.*sig)).^(-1),0];
Ab = [alph.*kapp.*(1+(-1).*bet.*psipi).*sig.*(alph.*kapp.*psipi.*sig+(( ...
  -1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1),( ...
  -1).*alph.*kapp.*((-1)+bet+bet.*psix.*sig).*(alph.*kapp.*psipi.* ...
  sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)) ...
  .^(-1),0;((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+bet.* ...
  psipi).*sig.*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.* ...
  bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1),((-1)+((-1)+alph).* ...
  alph.*bet.*((-1)+gam)).*((-1)+bet+bet.*psix.*sig).*(alph.*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.* ...
  sig)).^(-1),0;((-1)+bet.*psipi).*((-1).*alph.*kapp.*psipi+((-1)+(( ...
  -1)+alph).*alph.*bet.*((-1)+gam)).*psix).*sig.*(alph.*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.* ...
  sig)).^(-1),((-1).*alph.*kapp.*psipi+((-1)+((-1)+alph).*alph.* ...
  bet.*((-1)+gam)).*psix).*((-1)+bet+bet.*psix.*sig).*(alph.*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.* ...
  sig)).^(-1),0];
As = [alph.^(-1).*bet.^(-1).*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph) ...
  .*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1).*((1+(-1).* ...
  psix.*sig).*ia(4,1)+alph.*(1+bet).*((-1)+psix.*sig).*ia(4,1)+ ...
  alph.^2.*bet.*((1+(-1).*psix.*sig).*ia(3,1)+(1+(-1).*psix.*sig).* ...
  ia(4,1)+kapp.*sig.*(ib(1,1)+(-1).*ib(2,1)))),alph.^(-1).*bet.^(-1) ...
  .*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam) ...
  ).*((-1)+psix.*sig)).^(-1).*((1+(-1).*psix.*sig).*ia(4,2)+alph.*( ...
  1+bet).*((-1)+psix.*sig).*ia(4,2)+alph.^2.*bet.*((1+(-1).*psix.* ...
  sig).*ia(3,2)+(1+(-1).*psix.*sig).*ia(4,2)+kapp.*sig.*(ib(1,2)+( ...
  -1).*ib(2,2)))),alph.^(-1).*bet.^(-1).*(alph.*kapp.*psipi.*sig+(( ...
  -1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1).* ...
  ((1+(-1).*psix.*sig).*ia(4,3)+alph.*(1+bet).*((-1)+psix.*sig).*ia( ...
  4,3)+alph.^2.*bet.*((1+(-1).*psix.*sig).*ia(3,3)+(1+(-1).*psix.* ...
  sig).*ia(4,3)+kapp.*sig.*(ib(1,3)+(-1).*ib(2,3)))),alph.^(-1).* ...
  bet.^(-1).*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*( ...
  (-1)+gam)).*((-1)+psix.*sig)).^(-1).*((-1).*((-1)+psix.*sig).*(( ...
  -1)+ia(4,4))+alph.*(1+bet).*((-1)+psix.*sig).*((-1)+ia(4,4))+ ...
  alph.^2.*bet.*((-1)+gam+(-1).*gam.*psix.*sig+ia(3,4)+ia(4,4)+(-1) ...
  .*psix.*sig.*((-1)+ia(3,4)+ia(4,4))+kapp.*sig.*(ib(1,4)+(-1).*ib( ...
  2,4))));alph.^(-1).*bet.^(-1).*sig.*(alph.*kapp.*psipi.*sig+((-1)+ ...
  ((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1).*(( ...
  -1).*psipi.*ia(4,1)+alph.*((1+bet).*psipi.*ia(4,1)+bet.*(ib(1,1)+( ...
  -1).*ib(2,1)))+alph.^2.*bet.*((-1).*psipi.*(ia(3,1)+ia(4,1))+bet.* ...
  ((-1)+gam).*(ib(1,1)+(-1).*ib(2,1)))+(-1).*alph.^3.*bet.^2.*((-1)+ ...
  gam).*(ib(1,1)+(-1).*ib(2,1))),alph.^(-1).*bet.^(-1).*sig.*(alph.* ...
  kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+ ...
  psix.*sig)).^(-1).*((-1).*psipi.*ia(4,2)+alph.*((1+bet).*psipi.* ...
  ia(4,2)+bet.*(ib(1,2)+(-1).*ib(2,2)))+alph.^2.*bet.*((-1).*psipi.* ...
  (ia(3,2)+ia(4,2))+bet.*((-1)+gam).*(ib(1,2)+(-1).*ib(2,2)))+(-1).* ...
  alph.^3.*bet.^2.*((-1)+gam).*(ib(1,2)+(-1).*ib(2,2))),alph.^(-1).* ...
  bet.^(-1).*sig.*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.* ...
  bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1).*((-1).*psipi.*ia(4,3)+ ...
  alph.*((1+bet).*psipi.*ia(4,3)+bet.*(ib(1,3)+(-1).*ib(2,3)))+ ...
  alph.^2.*bet.*((-1).*psipi.*(ia(3,3)+ia(4,3))+bet.*((-1)+gam).*( ...
  ib(1,3)+(-1).*ib(2,3)))+(-1).*alph.^3.*bet.^2.*((-1)+gam).*(ib(1, ...
  3)+(-1).*ib(2,3))),alph.^(-1).*bet.^(-1).*sig.*(alph.*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.* ...
  sig)).^(-1).*(psipi+(-1).*alph.*psipi.*(1+bet+alph.*bet.*((-1)+ ...
  gam+ia(3,4)))+(-1).*((-1)+alph).*((-1)+alph.*bet).*psipi.*ia(4,4)+ ...
  alph.*bet.*((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1).*ib(1, ...
  4)+ib(2,4)));alph.^(-1).*bet.^(-1).*(alph.*kapp.*psipi.*sig+((-1)+ ...
  ((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1).*( ...
  psipi.*(1+(-2).*psix.*sig).*ia(4,1)+alph.*((1+bet).*psipi.*((-1)+ ...
  2.*psix.*sig).*ia(4,1)+bet.*psix.*sig.*(ib(1,1)+(-1).*ib(2,1)))+ ...
  alph.^2.*bet.*(psipi.*((1+(-2).*psix.*sig).*ia(3,1)+(1+(-2).* ...
  psix.*sig).*ia(4,1)+kapp.*sig.*(ib(1,1)+(-1).*ib(2,1)))+bet.*((-1) ...
  +gam).*psix.*sig.*(ib(1,1)+(-1).*ib(2,1)))+(-1).*alph.^3.*bet.^2.* ...
  ((-1)+gam).*psix.*sig.*(ib(1,1)+(-1).*ib(2,1))),alph.^(-1).*bet.^( ...
  -1).*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+ ...
  gam)).*((-1)+psix.*sig)).^(-1).*(psipi.*(1+(-2).*psix.*sig).*ia(4, ...
  2)+alph.^2.*bet.*(bet.*((-1)+gam).*(1+psix.*sig.*((-1)+ib(1,2)+( ...
  -1).*ib(2,2)))+psipi.*((-1).*((-1)+2.*psix.*sig).*(ia(3,2)+ia(4,2) ...
  )+kapp.*sig.*(1+ib(1,2)+(-1).*ib(2,2))))+(-1).*alph.^3.*bet.^2.*(( ...
  -1)+gam).*(1+psix.*sig.*((-1)+ib(1,2)+(-1).*ib(2,2)))+alph.*(bet+( ...
  -1).*bet.*psipi.*ia(4,2)+psipi.*((-1)+2.*psix.*sig).*ia(4,2)+bet.* ...
  psix.*sig.*((-1)+2.*psipi.*ia(4,2)+ib(1,2)+(-1).*ib(2,2)))), ...
  alph.^(-1).*bet.^(-1).*(alph.*kapp.*psipi.*sig+((-1)+((-1)+alph).* ...
  alph.*bet.*((-1)+gam)).*((-1)+psix.*sig)).^(-1).*(psipi.*(1+(-2).* ...
  psix.*sig).*ia(4,3)+alph.*((1+bet).*psipi.*((-1)+2.*psix.*sig).* ...
  ia(4,3)+bet.*psix.*sig.*(ib(1,3)+(-1).*ib(2,3)))+alph.^2.*bet.*( ...
  psipi.*((1+(-2).*psix.*sig).*ia(3,3)+(1+(-2).*psix.*sig).*ia(4,3)+ ...
  kapp.*sig.*(ib(1,3)+(-1).*ib(2,3)))+bet.*((-1)+gam).*psix.*sig.*( ...
  ib(1,3)+(-1).*ib(2,3)))+(-1).*alph.^3.*bet.^2.*((-1)+gam).*psix.* ...
  sig.*(ib(1,3)+(-1).*ib(2,3))),alph.^(-1).*bet.^(-1).*(alph.*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*((-1)+psix.* ...
  sig)).^(-1).*(psipi.*((-1).*((-1)+2.*psix.*sig).*((-1)+ia(4,4))+ ...
  alph.*(1+bet).*((-1)+2.*psix.*sig).*((-1)+ia(4,4))+alph.^2.*bet.*( ...
  (-1)+gam+(-2).*gam.*psix.*sig+ia(3,4)+ia(4,4)+(-2).*psix.*sig.*(( ...
  -1)+ia(3,4)+ia(4,4))+kapp.*sig.*(ib(1,4)+(-1).*ib(2,4))))+alph.* ...
  bet.*((-1)+((-1)+alph).*alph.*bet.*((-1)+gam)).*psix.*sig.*((-1).* ...
  ib(1,4)+ib(2,4)))];

mathematica_code = "/Users/lauragati/Dropbox/BC_Research/next/code/materials13indexation_opt.nb";
this_code = mfilename;
mname = strrep(this_code,'matrices_A_','')
mmcaname = extractBetween(mathematica_code,"/Users/lauragati/Dropbox/BC_Research/next/code/materials",".nb")

if strcmp(mname,mmcaname) ~=1
    error('not using the correct A-matrices from Mathematica!')
end