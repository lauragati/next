function res = objective_approx_reaction(coeffs,param,eN,capT,burnin,PLM,gain,gx,hx,eta,Aa,Ab,As, H, N)

% Replace the estimated parameters with the new guess
param.('psi_pi') = coeffs(1);
param.('psi_x') = coeffs(2);

[ny,nx] = size(gx);

T = capT-H;

% the innovations expected by the CB at each t
eN_CB = eN;
for t=1:T
eN_CB(:,t:end,:) = zeros(capT-T,N);

% Simulate the model N times, at each t inputting the future innovations
% the CB expects
xsim = zeros(ny,capT,N);
ysim = zeros(ny,capT,N);
pibar = zeros(capT,N);
k     = zeros(capT,N);
g_pi  = zeros(capT,N);

for n=1:N
    e = squeeze(eN(:,:,n));
    [xsim(:,:,n), ysim(:,:,n),phi_seq, k(:,n), g_pi(:,n)] = sim_learnLH_approx_reaction(gx,hx,eta,capT,burnin,e, Aa, Ab, As, param, PLM, gain);
    pibar(:,n) = squeeze(phi_seq(1,1,:));
end
end
b = gx*hx;

% Take cross-sectional averages 
xsim_mean = mean(xsim,3);
ysim_mean = mean(ysim,3);
pibar_mean = mean(pibar,2);
k_mean    = mean(k,2);
g_pi_mean = mean(g_pi,2);




% compute residual from target criterion
res = res_anchTC_only(param,ysim,k,pibar,b,xsim,g_pi,H);