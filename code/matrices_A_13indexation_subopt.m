function [Aa, Ab, As] = matrices_A_13indexation_subopt(param,hx)
% Mathematica, materials13indexation_subopt.nb
% 17 jan 2020
% A-matrices for baseline model w/ indexation in NKPC, suboptimal forecasters info ass.

bet = param.bet;  
sig = param.sig;
alph = param.alph;
kapp = param.kapp;
psi_x = param.psi_x;
psi_pi = param.psi_pi;
w = param.w;
gbar = param.gbar;
thetbar = param.thetbar;
rho_r = param.rho_r;
rho_i = param.rho_i;
rho_u = param.rho_u;
sig_r = param.sig_r;
sig_i = param.sig_i;
sig_u = param.sig_u;
rho = param.rho;
gam = param.gam;
nx= size(hx,1); 

% transform these two to be compatible with Mathematica
psipi = psi_pi;
psix = psi_x;

% The only thing you need to specify by hand is 
ia = (eye(nx)-alph*bet*hx)^(-1);
ib = (eye(nx)-bet*hx)^(-1);

% Given the d-matrices, the solution is calculated in Mathematica and
% copied from there:
Aa = [((-1)+alph).*bet.*((-1)+alph.*bet.*gam).*(1+psix.*sig).*(1+kapp.* ...
  psipi.*sig+psix.*sig+(-1).*((-1)+alph).*bet.*gam.*(1+psix.*sig)) ...
  .^(-1),alph.*bet.*kapp.*(1+psix.*sig).*(1+kapp.*psipi.*sig+psix.* ...
  sig+(-1).*((-1)+alph).*bet.*gam.*(1+psix.*sig)).^(-1),0;((-1)+ ...
  alph).*bet.*((-1)+alph.*bet.*gam).*psipi.*sig.*((-1).*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)).^(-1), ...
  alph.*bet.*kapp.*psipi.*sig.*((-1).*kapp.*psipi.*sig+((-1)+((-1)+ ...
  alph).*bet.*gam).*(1+psix.*sig)).^(-1),0;((-1)+alph).*bet.*((-1)+ ...
  alph.*bet.*gam).*psipi.*(1+kapp.*psipi.*sig+psix.*sig+(-1).*((-1)+ ...
  alph).*bet.*gam.*(1+psix.*sig)).^(-1),alph.*bet.*kapp.*psipi.*(1+ ...
  kapp.*psipi.*sig+psix.*sig+(-1).*((-1)+alph).*bet.*gam.*(1+psix.* ...
  sig)).^(-1),0];
Ab = [kapp.*(1+(-1).*bet.*psipi).*sig.*(1+kapp.*psipi.*sig+psix.*sig+( ...
  -1).*((-1)+alph).*bet.*gam.*(1+psix.*sig)).^(-1),(-1).*kapp.*((-1) ...
  +bet+bet.*psix.*sig).*(1+kapp.*psipi.*sig+psix.*sig+(-1).*((-1)+ ...
  alph).*bet.*gam.*(1+psix.*sig)).^(-1),0;((-1)+((-1)+alph).*bet.* ...
  gam).*((-1)+bet.*psipi).*sig.*(1+kapp.*psipi.*sig+psix.*sig+(-1).* ...
  ((-1)+alph).*bet.*gam.*(1+psix.*sig)).^(-1),((-1)+((-1)+alph).* ...
  bet.*gam).*((-1)+bet+bet.*psix.*sig).*(1+kapp.*psipi.*sig+psix.* ...
  sig+(-1).*((-1)+alph).*bet.*gam.*(1+psix.*sig)).^(-1),0;((-1)+ ...
  bet.*psipi).*((-1).*kapp.*psipi+((-1)+((-1)+alph).*bet.*gam).* ...
  psix).*sig.*(1+kapp.*psipi.*sig+psix.*sig+(-1).*((-1)+alph).*bet.* ...
  gam.*(1+psix.*sig)).^(-1),((-1).*kapp.*psipi+((-1)+((-1)+alph).* ...
  bet.*gam).*psix).*((-1)+bet+bet.*psix.*sig).*(1+kapp.*psipi.*sig+ ...
  psix.*sig+(-1).*((-1)+alph).*bet.*gam.*(1+psix.*sig)).^(-1),0];
As = [((-1).*kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.* ...
  sig)).^(-1).*((-1).*(1+psix.*sig).*ia(3,1)+kapp.*sig.*((-1).*ib(1, ...
  1)+ib(2,1))),((-1).*kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.*gam) ...
  .*(1+psix.*sig)).^(-1).*((-1).*(1+psix.*sig).*ia(3,2)+kapp.*sig.*( ...
  (-1).*ib(1,2)+ib(2,2))),((-1).*kapp.*psipi.*sig+((-1)+((-1)+alph) ...
  .*bet.*gam).*(1+psix.*sig)).^(-1).*((-1).*(1+psix.*sig).*ia(3,3)+ ...
  kapp.*sig.*((-1).*ib(1,3)+ib(2,3))),((-1).*kapp.*psipi.*sig+((-1)+ ...
  ((-1)+alph).*bet.*gam).*(1+psix.*sig)).^(-1).*((-1).*gam.*(1+ ...
  psix.*sig)+(-1).*(1+psix.*sig).*ia(3,4)+kapp.*sig.*((-1).*ib(1,4)+ ...
  ib(2,4)));sig.*((-1).*kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.* ...
  gam).*(1+psix.*sig)).^(-1).*(psipi.*ia(3,1)+((-1)+((-1)+alph).* ...
  bet.*gam).*(ib(1,1)+(-1).*ib(2,1))),sig.*((-1).*kapp.*psipi.*sig+( ...
  (-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)).^(-1).*(psipi.*ia(3,2) ...
  +((-1)+((-1)+alph).*bet.*gam).*(ib(1,2)+(-1).*ib(2,2))),sig.*((-1) ...
  .*kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)).^( ...
  -1).*(psipi.*ia(3,3)+((-1)+((-1)+alph).*bet.*gam).*(ib(1,3)+(-1).* ...
  ib(2,3))),sig.*((-1).*kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.* ...
  gam).*(1+psix.*sig)).^(-1).*(psipi.*ia(3,4)+(-1).*ib(1,4)+gam.*( ...
  psipi+((-1)+alph).*bet.*(ib(1,4)+(-1).*ib(2,4)))+ib(2,4));((-1).* ...
  kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)).^( ...
  -1).*((-1).*psipi.*(ia(3,1)+kapp.*sig.*(ib(1,1)+(-1).*ib(2,1)))+(( ...
  -1)+((-1)+alph).*bet.*gam).*psix.*sig.*(ib(1,1)+(-1).*ib(2,1))),(( ...
  -1).*kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)) ...
  .^(-1).*((-1)+(-1).*psipi.*(ia(3,2)+kapp.*sig.*(1+ib(1,2)+(-1).* ...
  ib(2,2)))+((-1)+alph).*bet.*gam.*(1+psix.*sig.*(1+ib(1,2)+(-1).* ...
  ib(2,2)))+psix.*sig.*((-1)+(-1).*ib(1,2)+ib(2,2))),((-1).*kapp.* ...
  psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)).^(-1).*(( ...
  -1).*psipi.*(ia(3,3)+kapp.*sig.*(ib(1,3)+(-1).*ib(2,3)))+((-1)+(( ...
  -1)+alph).*bet.*gam).*psix.*sig.*(ib(1,3)+(-1).*ib(2,3))),((-1).* ...
  kapp.*psipi.*sig+((-1)+((-1)+alph).*bet.*gam).*(1+psix.*sig)).^( ...
  -1).*((-1).*gam.*psipi+(-1).*psix.*sig.*ib(1,4)+(-1).*psipi.*(ia( ...
  3,4)+kapp.*sig.*ib(1,4))+((-1)+alph).*bet.*gam.*psix.*sig.*(ib(1, ...
  4)+(-1).*ib(2,4))+(kapp.*psipi+psix).*sig.*ib(2,4))];

mathematica_code = "/Users/lauragati/Dropbox/BC_Research/next/code/materials13indexation_subopt.nb";
this_code = mfilename;
mname = strrep(this_code,'matrices_A_','')
mmcaname = extractBetween(mathematica_code,"/Users/lauragati/Dropbox/BC_Research/next/code/materials",".nb")

if strcmp(mname,mmcaname) ~=1
    error('not using the correct A-matrices from Mathematica!')
end